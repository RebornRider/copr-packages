# Generated by rust2rpm 27
%bcond check 1

%global debug_package %{nil}

# prevent library files from being installed
%global cargo_install_lib 0

%global crate atuin

Name:           rust-atuin
Version:        18.8.0
Release:        %autorelease -e 1
Summary:        - magical shell history

License:        MIT
URL:            https://crates.io/crates/atuin
Source:         %{crates_source}
Source:         https://github.com/RebornRider/copr-packages/releases/download/source-artefacts/atuin-18.8.0-vendor.tar.xz
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          atuin-fix-metadata-auto.diff

BuildRequires:  cargo-rpm-macros >= 26

%global _description %{expand:
Atuin - magical shell history.}

%description %{_description}

%package     -n %{crate}
Summary:        %{summary}
# FIXME: paste output of %%cargo_license_summary here
License:        ((Apache-2.0 OR MIT) AND BSD-3-Clause) AND (0BSD OR MIT OR Apache-2.0) AND (Apache-2.0) AND (Apache-2.0 AND ISC) AND (Apache-2.0 OR BSL-1.0) AND (Apache-2.0 OR BSL-1.0 OR MIT) AND (Apache-2.0 OR ISC OR MIT) AND (Apache-2.0 OR MIT) AND (Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND (BSD-2-Clause OR Apache-2.0 OR MIT) AND (BSD-2-Clause OR MIT OR Apache-2.0) AND (BSD-3-Clause) AND (BSL-1.0) AND (ISC) AND (MIT) AND (MIT AND BSD-3-Clause) AND (MIT OR Apache-2.0) AND (MIT OR Apache-2.0 OR BSD-1-Clause) AND (MIT OR Apache-2.0 OR CC0-1.0) AND (MIT OR Apache-2.0 OR LGPL-2.1-or-later) AND (MIT OR Apache-2.0 OR Zlib) AND (MIT OR Zlib OR Apache-2.0) AND (MPL-2.0) AND (Unicode-3.0) AND (Unlicense OR MIT) AND (Zlib) AND (Zlib OR Apache-2.0 OR MIT)
# LICENSE.dependencies contains a full license breakdown

%description -n %{crate} %{_description}

%files       -n %{crate}
%license LICENSE
%license LICENSE.dependencies
%license cargo-vendor.txt
%doc README.md
%{_bindir}/atuin
%{bash_completions_dir}/%{crate}.bash
%{zsh_completions_dir}/_%{crate}
%{fish_completions_dir}/%{crate}.fish

%prep
%autosetup -n %{crate}-%{version} -p1 -a1
%cargo_prep -v vendor

%build
%cargo_build
%{cargo_license_summary}
%{cargo_license} > LICENSE.dependencies
%{cargo_vendor_manifest}
# generate completions
target/release/%{crate} gen-completions -s bash -o .
target/release/%{crate} gen-completions -s zsh -o .
target/release/%{crate} gen-completions -s fish -o .

%install
%cargo_install
# install shell completions
install -Dpm0644 %{crate}.bash \
    %{buildroot}/%{bash_completions_dir}/%{crate}.bash
install -Dpm0644 %{crate}.fish \
    %{buildroot}/%{fish_completions_dir}/%{crate}.fish
install -Dpm0644 _%{crate} \
    %{buildroot}/%{zsh_completions_dir}/_%{crate}

%if %{with check}
%check
# * failing without internet
# * failing without internet
# * failing without internet
# * failing without internet
%{cargo_test -- --bins -- %{shrink:
    --skip multi_user_test
    --skip registration
    --skip change_password
    --skip sync
}}
%{cargo_test -- --tests -- %{shrink:
    --skip multi_user_test
    --skip registration
    --skip change_password
    --skip sync
}}
%endif

%changelog
%autochangelog
